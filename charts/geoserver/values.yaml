replicaCount: 1

image:
  repository: ghcr.io/delta10/geoserver
  pullPolicy: IfNotPresent
  tag: ""

persistence:
  enabled: true
  size: 1Gi
  existingClaim: null
  accessModes:
    - ReadWriteMany
  storageClassName: ""

existingSecret: null

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

startupProbe:
  httpGet:
    path: /geoserver/
    port: http
  periodSeconds: 10
  timeoutSeconds: 10
  failureThreshold: 30

livenessProbe:
  httpGet:
    path: /geoserver/
    port: http
  periodSeconds: 10
  timeoutSeconds: 10
  failureThreshold: 10

readinessProbe:
  httpGet:
    path: /geoserver/
    port: http
  periodSeconds: 10
  timeoutSeconds: 10
  failureThreshold: 10

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# -- Additional environment variables mounted from [secrets](https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables) or [config maps](https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/#configure-all-key-value-pairs-in-a-configmap-as-container-environment-variables).
# See the [API reference](https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#environment-variables) for details.
envFrom: []

# -- Additional environment variables passed directly to containers.
# See the [API reference](https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#environment-variables) for details.
env:
  EXTRA_JAVA_OPTS: "-Xms256m -Xmx1g"
  # CORS_ENABLED: "false"
  # CORS_ALLOWED_METHODS=GET,POST,PUT,HEAD,OPTIONS
  # INSTALL_EXTENSIONS: "true"
  # STABLE_EXTENSIONS: ""

# -- Similar to env but with support for all possible configurations.
# See the [API reference](https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#environment-variables) for details.
envVars: []
# - name: SOME_ENV_VAR
#   value: value
# - name: SOME_ENV_VAR2
#   valueFrom:
#     secretKeyRef:
#       name: secret-name
#       key: secret-key
# - name: SOME_ENV_VAR3
#   valueFrom:
#     configMapKeyRef:
#       name: config-map-name
#       key: config-map-key
