# Default values for signalen-gw.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/delta10/signalen-gw
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

settings: |-
  import os

  ZDS_ENABLED = False
  BUITENBETER_ENABLED = False

  ZDS_ENDPOINT = 'http://127.0.0.1:8002'
  SIGNALEN_ENDPOINT = 'http://127.0.0.1:8000'

  BUITENBETER_MACHINE_LEARNING_MINIMUM_CERTAINTY = 0.41
  BUITENBETER_SOURCE_NAME = 'BuitenBeter'

  ADDITIONAL_ZDS_HEADERS = {
    'x-opentunnel-api-key': os.getenv('ZDS_API_KEY', 'something-secret')
  }

  ADDITIONAL_SIGNALEN_HEADERS = {
    'Authorization': 'Bearer ' + os.getenv('SIGNALEN_TOKEN', 'something-secret')
  }

  ZDS_ZENDER = {
    'organisatie': 'Gemeente Test',
    'applicatie': 'SIGNALEN'
  }

  ZDS_ONTVANGER = {
    'organisatie': 'Gemeente Test',
    'applicatie': 'UITSTEKEND'
  }

  ZDS_ZAAKTYPES = {
    'MLDSIG': {
      'omschrijving': 'Melding Signalen',
      'code': 'MLDSIG'
    }
  }

  ZDS_STATUSTYPES = {
    'Ontvangen': {
      'volgnummer': '1',
      'omschrijving': 'Ontvangen'
    },
    'Afgehandeld': {
      'volgnummer': '2',
      'omschrijving': 'Afgehandeld'
    }
  }

secrets:
  ZDS_API_KEY: something-secret
  SIGNALEN_TOKEN: something-secret

existingSecret: null # Refer to existing secret to avoid managing secrets through Helm

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
